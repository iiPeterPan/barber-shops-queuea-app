{"version":3,"sources":["../node_modules/@material-ui/icons/ExpandMore.js","../node_modules/@material-ui/core/esm/ExpansionPanel/ExpansionPanelContext.js","../node_modules/@material-ui/core/esm/ExpansionPanel/ExpansionPanel.js","../node_modules/@babel/runtime/helpers/esm/toArray.js","../node_modules/@material-ui/core/esm/ExpansionPanelDetails/ExpansionPanelDetails.js","../node_modules/@material-ui/core/esm/ExpansionPanelSummary/ExpansionPanelSummary.js","example-components/Accordions/AccordionsBasic/index.js","example-components/Accordions/AccordionsCollapse/index.js","example-pages/Accordions/index.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_react","_default","createElement","d","ExpansionPanelContext","React","createContext","ExpansionPanel","forwardRef","props","ref","arr","childrenProp","children","classes","className","_props$defaultExpande","defaultExpanded","_props$disabled","disabled","expandedProp","expanded","onChange","_props$square","square","_props$TransitionComp","TransitionComponent","Collapse","TransitionProps","other","_objectWithoutProperties","_useControlled","useControlled","controlled","name","_useControlled2","_slicedToArray","setExpandedState","handleChange","useCallback","event","_React$Children$toArr","Children","toArray","_React$Children$toArr2","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","summary","slice","contextValue","useMemo","toggle","Paper","_extends","clsx","root","rounded","Provider","in","timeout","id","role","withStyles","theme","transition","duration","transitions","shortest","position","create","left","top","right","height","content","opacity","backgroundColor","palette","divider","display","margin","marginTop","marginBottom","action","disabledBackground","borderRadius","borderTopLeftRadius","shape","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","ExpansionPanelDetails","padding","ExpansionPanelSummary","expandIcon","IconButtonProps","onBlur","onClick","onFocusVisible","_React$useState","useState","focusedState","setFocusedState","_React$useContext","useContext","_React$useContext$dis","ButtonBase","focusRipple","disableRipple","component","focused","IconButton","edge","tabIndex","minHeight","cursor","grey","flexGrow","transform","LivePreviewExample","setExpanded","panel","isExpanded","aria-controls","Typography","aria-label","FormControlLabel","stopPropagation","onFocus","control","Checkbox","label","color","Accordions","titleHeading","titleDescription","Grid","container","spacing","item","xs","lg","sectionHeading"],"mappings":"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","file":"static/js/9.8c56ec21.chunk.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)(_react.default.createElement(\"path\", {\n  d: \"M16.59 8.59L12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');\n\nexports.default = _default;","import React from 'react';\n/**\n * @ignore - internal component.\n * @type {React.Context<{} | {expanded: boolean, disabled: boolean, toggle: () => void}>}\n */\n\nvar ExpansionPanelContext = React.createContext({});\n\nif (process.env.NODE_ENV !== 'production') {\n  ExpansionPanelContext.displayName = 'ExpansionPanelContext';\n}\n\nexport default ExpansionPanelContext;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _toArray from \"@babel/runtime/helpers/esm/toArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport Collapse from '../Collapse';\nimport Paper from '../Paper';\nimport withStyles from '../styles/withStyles';\nimport ExpansionPanelContext from './ExpansionPanelContext';\nimport useControlled from '../utils/useControlled';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      transition: theme.transitions.create(['margin'], transition),\n      '&:before': {\n        position: 'absolute',\n        left: 0,\n        top: -1,\n        right: 0,\n        height: 1,\n        content: '\"\"',\n        opacity: 1,\n        backgroundColor: theme.palette.divider,\n        transition: theme.transitions.create(['opacity', 'background-color'], transition)\n      },\n      '&:first-child': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$expanded': {\n        margin: '16px 0',\n        '&:first-child': {\n          marginTop: 0\n        },\n        '&:last-child': {\n          marginBottom: 0\n        },\n        '&:before': {\n          opacity: 0\n        }\n      },\n      '&$expanded + &': {\n        '&:before': {\n          display: 'none'\n        }\n      },\n      '&$disabled': {\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `square={false}`. */\n    rounded: {\n      borderRadius: 0,\n      '&:first-child': {\n        borderTopLeftRadius: theme.shape.borderRadius,\n        borderTopRightRadius: theme.shape.borderRadius\n      },\n      '&:last-child': {\n        borderBottomLeftRadius: theme.shape.borderRadius,\n        borderBottomRightRadius: theme.shape.borderRadius,\n        // Fix a rendering issue on Edge\n        '@supports (-ms-ime-align: auto)': {\n          borderBottomLeftRadius: 0,\n          borderBottomRightRadius: 0\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `expanded={true}`. */\n    expanded: {},\n\n    /* Styles applied to the root element if `disabled={true}`. */\n    disabled: {}\n  };\n};\nvar ExpansionPanel = React.forwardRef(function ExpansionPanel(props, ref) {\n  var childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$defaultExpande = props.defaultExpanded,\n      defaultExpanded = _props$defaultExpande === void 0 ? false : _props$defaultExpande,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      expandedProp = props.expanded,\n      onChange = props.onChange,\n      _props$square = props.square,\n      square = _props$square === void 0 ? false : _props$square,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Collapse : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"defaultExpanded\", \"disabled\", \"expanded\", \"onChange\", \"square\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var _useControlled = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'ExpansionPanel'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      expanded = _useControlled2[0],\n      setExpandedState = _useControlled2[1];\n\n  var handleChange = React.useCallback(function (event) {\n    setExpandedState(!expanded);\n\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, onChange, setExpandedState]);\n\n  var _React$Children$toArr = React.Children.toArray(childrenProp),\n      _React$Children$toArr2 = _toArray(_React$Children$toArr),\n      summary = _React$Children$toArr2[0],\n      children = _React$Children$toArr2.slice(1);\n\n  var contextValue = React.useMemo(function () {\n    return {\n      expanded: expanded,\n      disabled: disabled,\n      toggle: handleChange\n    };\n  }, [expanded, disabled, handleChange]);\n  return React.createElement(Paper, _extends({\n    className: clsx(classes.root, className, expanded && classes.expanded, disabled && classes.disabled, !square && classes.rounded),\n    ref: ref,\n    square: square\n  }, other), React.createElement(ExpansionPanelContext.Provider, {\n    value: contextValue\n  }, summary), React.createElement(TransitionComponent, _extends({\n    in: expanded,\n    timeout: \"auto\"\n  }, TransitionProps), React.createElement(\"div\", {\n    \"aria-labelledby\": summary.props.id,\n    id: summary.props['aria-controls'],\n    role: \"region\"\n  }, children)));\n});\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanel.propTypes = {\n  /**\n   * The content of the expansion panel.\n   */\n  children: chainPropTypes(PropTypes.node.isRequired, function (props) {\n    var summary = React.Children.toArray(props.children)[0];\n\n    if (isFragment(summary)) {\n      return new Error(\"Material-UI: the ExpansionPanel doesn't accept a Fragment as a child. \" + 'Consider providing an array instead.');\n    }\n\n    if (!React.isValidElement(summary)) {\n      return new Error('Material-UI: expected the first child of ExpansionPanel to be a valid element.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, expands the panel by default.\n   */\n  defaultExpanded: PropTypes.bool,\n\n  /**\n   * If `true`, the panel will be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, expands the panel, otherwise collapse it.\n   * Setting this prop enables control over the panel.\n   */\n  expanded: PropTypes.bool,\n\n  /**\n   * Callback fired when the expand/collapse state is changed.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {boolean} expanded The `expanded` state of the panel.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  square: PropTypes.bool,\n\n  /**\n   * The component used for the collapse effect.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiExpansionPanel'\n})(ExpansionPanel);","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    padding: '8px 24px 24px'\n  }\n};\nvar ExpansionPanelDetails = React.forwardRef(function ExpansionPanelDetails(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanelDetails.propTypes = {\n  /**\n   * The content of the expansion panel details.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiExpansionPanelDetails'\n})(ExpansionPanelDetails);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\n\n/* eslint-disable jsx-a11y/aria-role */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport ButtonBase from '../ButtonBase';\nimport IconButton from '../IconButton';\nimport withStyles from '../styles/withStyles';\nimport ExpansionPanelContext from '../ExpansionPanel/ExpansionPanelContext';\nexport var styles = function styles(theme) {\n  var transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'flex',\n      minHeight: 8 * 6,\n      transition: theme.transitions.create(['min-height', 'background-color'], transition),\n      padding: '0 24px 0 24px',\n      '&:hover:not($disabled)': {\n        cursor: 'pointer'\n      },\n      '&$expanded': {\n        minHeight: 64\n      },\n      '&$focused': {\n        backgroundColor: theme.palette.grey[300]\n      },\n      '&$disabled': {\n        opacity: 0.38\n      }\n    },\n\n    /* Pseudo-class applied to the root element, children wrapper element and `IconButton` component if `expanded={true}`. */\n    expanded: {},\n\n    /* Pseudo-class applied to the root element if `focused={true}`. */\n    focused: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the children wrapper element. */\n    content: {\n      display: 'flex',\n      flexGrow: 1,\n      transition: theme.transitions.create(['margin'], transition),\n      margin: '12px 0',\n      '&$expanded': {\n        margin: '20px 0'\n      }\n    },\n\n    /* Styles applied to the `IconButton` component when `expandIcon` is supplied. */\n    expandIcon: {\n      transform: 'rotate(0deg)',\n      transition: theme.transitions.create('transform', transition),\n      '&:hover': {\n        // Disable the hover effect for the IconButton,\n        // because a hover effect should apply to the entire Expand button and\n        // not only to the IconButton.\n        backgroundColor: 'transparent'\n      },\n      '&$expanded': {\n        transform: 'rotate(180deg)'\n      }\n    }\n  };\n};\nvar ExpansionPanelSummary = React.forwardRef(function ExpansionPanelSummary(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      expandIcon = props.expandIcon,\n      IconButtonProps = props.IconButtonProps,\n      onBlur = props.onBlur,\n      onClick = props.onClick,\n      onFocusVisible = props.onFocusVisible,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"expandIcon\", \"IconButtonProps\", \"onBlur\", \"onClick\", \"onFocusVisible\"]);\n\n  var _React$useState = React.useState(false),\n      focusedState = _React$useState[0],\n      setFocusedState = _React$useState[1];\n\n  var handleFocusVisible = function handleFocusVisible(event) {\n    setFocusedState(true);\n\n    if (onFocusVisible) {\n      onFocusVisible(event);\n    }\n  };\n\n  var handleBlur = function handleBlur(event) {\n    setFocusedState(false);\n\n    if (onBlur) {\n      onBlur(event);\n    }\n  };\n\n  var _React$useContext = React.useContext(ExpansionPanelContext),\n      _React$useContext$dis = _React$useContext.disabled,\n      disabled = _React$useContext$dis === void 0 ? false : _React$useContext$dis,\n      expanded = _React$useContext.expanded,\n      toggle = _React$useContext.toggle;\n\n  var handleChange = function handleChange(event) {\n    if (toggle) {\n      toggle(event);\n    }\n\n    if (onClick) {\n      onClick(event);\n    }\n  };\n\n  return React.createElement(ButtonBase, _extends({\n    focusRipple: false,\n    disableRipple: true,\n    disabled: disabled,\n    component: \"div\",\n    \"aria-expanded\": expanded,\n    className: clsx(classes.root, className, disabled && classes.disabled, expanded && classes.expanded, focusedState && classes.focused),\n    onFocusVisible: handleFocusVisible,\n    onBlur: handleBlur,\n    onClick: handleChange,\n    ref: ref\n  }, other), React.createElement(\"div\", {\n    className: clsx(classes.content, expanded && classes.expanded)\n  }, children), expandIcon && React.createElement(IconButton, _extends({\n    className: clsx(classes.expandIcon, expanded && classes.expanded),\n    edge: \"end\",\n    component: \"div\",\n    tabIndex: null,\n    role: null,\n    \"aria-hidden\": true\n  }, IconButtonProps), expandIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? ExpansionPanelSummary.propTypes = {\n  /**\n   * The content of the expansion panel summary.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The icon to display as the expand indicator.\n   */\n  expandIcon: PropTypes.node,\n\n  /**\n   * Props applied to the `IconButton` element wrapping the expand icon.\n   */\n  IconButtonProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocusVisible: PropTypes.func\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiExpansionPanelSummary'\n})(ExpansionPanelSummary);","import React, { Fragment } from 'react';\n\nimport { Typography } from '@material-ui/core';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nexport default function LivePreviewExample() {\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleChange = panel => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n  return (\n    <Fragment>\n      <ExpansionPanel\n        expanded={expanded === 'panel1'}\n        onChange={handleChange('panel1')}>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel1bh-content\"\n          id=\"panel1bh-header\">\n          <Typography>General settings</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography>\n            Nulla facilisi. Phasellus sollicitudin nulla et quam mattis feugiat.\n            Aliquam eget maximus est, id dignissim quam.\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n      <ExpansionPanel\n        expanded={expanded === 'panel2'}\n        onChange={handleChange('panel2')}>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel2bh-content\"\n          id=\"panel2bh-header\">\n          <Typography>Users</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography>\n            Donec placerat, lectus sed mattis semper, neque lectus feugiat\n            lectus, varius pulvinar diam eros in elit. Pellentesque convallis\n            laoreet laoreet.\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n      <ExpansionPanel\n        expanded={expanded === 'panel3'}\n        onChange={handleChange('panel3')}>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel3bh-content\"\n          id=\"panel3bh-header\">\n          <Typography>Advanced settings</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography>\n            Nunc vitae orci ultricies, auctor nunc in, volutpat nisl. Integer\n            sit amet egestas eros, vitae egestas augue. Duis vel est augue.\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n      <ExpansionPanel\n        expanded={expanded === 'panel4'}\n        onChange={handleChange('panel4')}>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-controls=\"panel4bh-content\"\n          id=\"panel4bh-header\">\n          <Typography>Personal data</Typography>\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography>\n            Nunc vitae orci ultricies, auctor nunc in, volutpat nisl. Integer\n            sit amet egestas eros, vitae egestas augue. Duis vel est augue.\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </Fragment>\n  );\n}\n","import React, { Fragment } from 'react';\n\nimport { FormControlLabel, Typography, Checkbox } from '@material-ui/core';\n\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nexport default function LivePreviewExample() {\n  const [expanded, setExpanded] = React.useState(false);\n\n  const handleChange = panel => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n  return (\n    <Fragment>\n      <ExpansionPanel\n        expanded={expanded === 'panel1'}\n        onChange={handleChange('panel1')}>\n        <ExpansionPanelSummary\n          expandIcon={<ExpandMoreIcon />}\n          aria-label=\"Expand\"\n          aria-controls=\"additional-actions1-content\"\n          id=\"additional-actions1-header\">\n          <FormControlLabel\n            aria-label=\"Acknowledge\"\n            className=\"mb-0\"\n            onClick={event => event.stopPropagation()}\n            onFocus={event => event.stopPropagation()}\n            control={<Checkbox />}\n            label=\"I acknowledge that I should stop the click event propagation\"\n          />\n        </ExpansionPanelSummary>\n        <ExpansionPanelDetails>\n          <Typography color=\"textSecondary\">\n            The click event of the nested action will propagate up and expand\n            the panel unless you explicitly stop it.\n          </Typography>\n        </ExpansionPanelDetails>\n      </ExpansionPanel>\n    </Fragment>\n  );\n}\n","import React, { Fragment } from 'react';\n\nimport { PageTitle } from '../../layout-components';\nimport { Grid } from '@material-ui/core';\nimport { ExampleWrapperSeamless } from '../../layout-components';\n\nimport AccordionsBasic from '../../example-components/Accordions/AccordionsBasic';\nimport AccordionsCollapse from '../../example-components/Accordions/AccordionsCollapse';\n\nexport default function Accordions() {\n  return (\n    <Fragment>\n      <PageTitle\n        titleHeading=\"Accordions\"\n        titleDescription=\"Accordions represent collapsable component with extended functionality.\"\n      />\n      <Grid container spacing={4}>\n        <Grid item xs={12} lg={6}>\n          <ExampleWrapperSeamless sectionHeading=\"Basic\">\n            <AccordionsBasic />\n          </ExampleWrapperSeamless>\n        </Grid>\n        <Grid item xs={12} lg={6}>\n          <ExampleWrapperSeamless sectionHeading=\"Collapse\">\n            <AccordionsCollapse />\n          </ExampleWrapperSeamless>\n        </Grid>\n      </Grid>\n    </Fragment>\n  );\n}\n"],"sourceRoot":""}