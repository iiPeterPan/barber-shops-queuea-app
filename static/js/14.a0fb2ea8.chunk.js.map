{"version":3,"sources":["example-components/DashboardDefault/DashboardDefaultSection1/index.js","example-components/DashboardDefault/DashboardDefaultSection2/index.js","example-pages/DashboardDefault/index.js"],"names":["LivePreviewExample","props","utils","DateFnsUtils","Grid","container","spacing","item","xs","sm","md","Card","className","CardContent","style","fontSize","countQueue","date","margin","id","format","value","selectedDate","minDate","Date","onChange","handleDateChange","KeyboardButtonProps","useStyles","makeStyles","root","width","maxWidth","paddingTop","paddingLeft","paddingBottom","isLoading","classes","useEffect","console","log","data","Button","variant","color","onClick","tableRefresh","CircularProgress","emptyQueues","Typography","gutterBottom","map","obj","index","queueTime","ownerOne","DashboardDefault","React","useState","setSelectedDate","queue","isDialogOpen","setIsDialogOpen","setIsLoading","toString","setDate","setData","setCountQueue","setEmptyQueues","prosessDate","dateStr","myArray","split","month","year","handleClose","countQueues","i","length","fetchMyAPI","a","url","headers","axios","get","then","res","Dialog","fullWidth","onClose","aria-labelledby","open","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus"],"mappings":"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","file":"static/js/14.a0fb2ea8.chunk.js","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { Grid, Card, CardContent, Button, Divider } from \"@material-ui/core\";\nimport DateFnsUtils from \"@date-io/date-fns\";\nimport {\n  MuiPickersUtilsProvider,\n  KeyboardTimePicker,\n  KeyboardDatePicker,\n} from \"@material-ui/pickers\";\n\nimport axios from \"axios\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Chart from \"react-apexcharts\";\nimport { format } from \"date-fns\";\n\nexport default function LivePreviewExample(props) {\n  const chart30Options = {\n    chart: {\n      toolbar: {\n        show: false,\n      },\n      sparkline: {\n        enabled: true,\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    colors: [\"#3c44b1\"],\n    stroke: {\n      color: \"#4191ff\",\n      curve: \"smooth\",\n      width: 4,\n    },\n    xaxis: {\n      crosshairs: {\n        width: 1,\n      },\n    },\n    yaxis: {\n      min: 0,\n    },\n    legend: {\n      show: false,\n    },\n  };\n  const chart30Data = [\n    {\n      name: \"Customers\",\n      data: [47, 38, 56, 24, 45, 54, 38, 47, 38, 56, 24, 56, 24, 65],\n    },\n  ];\n\n  const chart31Options = {\n    chart: {\n      toolbar: {\n        show: false,\n      },\n      sparkline: {\n        enabled: true,\n      },\n    },\n    dataLabels: {\n      enabled: false,\n    },\n    colors: [\"#f4772e\"],\n    stroke: {\n      color: \"#4191ff\",\n      curve: \"smooth\",\n      width: 3,\n    },\n    xaxis: {\n      crosshairs: {\n        width: 1,\n      },\n    },\n    yaxis: {\n      min: 0,\n    },\n    legend: {\n      show: false,\n    },\n  };\n  const chart31Data = [\n    {\n      name: \"Sales\",\n      data: [47, 38, 56, 24, 45, 54, 38, 47, 38, 56, 24, 56, 24, 65],\n    },\n  ];\n\n  return (\n    <MuiPickersUtilsProvider utils={DateFnsUtils}>\n      <Fragment>\n        <Grid container spacing={2}>\n          <Grid item xs={12} sm={6} md={4}>\n            <Card className=\"card-box bg-midnight-bloom text-light mb-4\">\n              <CardContent className=\"p-3\">\n                <div className=\"d-flex align-items-start\">\n                  <div className=\"font-weight-bold\">\n                    <p\n                      className=\"text-white-50 d-block mb-1 text-uppercase\"\n                      style={{ fontSize: \"20px\" }}\n                    >\n                      คิวที่เหลือ\n                    </p>\n                  </div>\n                  <div className=\"ml-auto\">\n                    <div className=\"font-weight-bold text-center d-50 d-flex align-items-center justify-content-center\">\n                      <span\n                        className=\"font-size-xxl mt-2\"\n                        style={{ fontSize: \"50px\" }}\n                      >\n                        {props.countQueue}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"mt-3\">\n                  <span className=\"text-white-50\">{props.date}</span>\n                </div>\n              </CardContent>\n            </Card>\n          </Grid>\n\n          <Grid item xs={12} sm={6} md={4}>\n            <Card className=\"card-box text-light mb-4\">\n              <CardContent className=\"p-3\">\n                <KeyboardDatePicker\n                  margin=\"normal\"\n                  id=\"date-picker-dialog\"\n                  format=\"dd/MM/yyyy\"\n                  value={props.selectedDate}\n                  minDate={new Date()}\n                  onChange={props.handleDateChange}\n                  KeyboardButtonProps={{\n                    \"aria-label\": \"change date\",\n                  }}\n                />\n              </CardContent>\n            </Card>\n          </Grid>\n        </Grid>\n      </Fragment>\n    </MuiPickersUtilsProvider>\n  );\n}\n","import React, { Fragment, useEffect } from \"react\";\n\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\n\nimport {\n  IconButton,\n  LinearProgress,\n  Card,\n  CardContent,\n  Button,\n  Tooltip,\n} from \"@material-ui/core\";\n\nimport axios from \"axios\";\n\nconst useStyles = makeStyles({\n  root: {\n    width: \"100%\",\n    maxWidth: 500,\n    paddingTop: \"20%\",\n    paddingLeft: \"80%\",\n    paddingBottom: \"10%\",\n  },\n  isLoading: {\n    paddingTop: \"10%\",\n    paddingLeft: \"105%\",\n    paddingBottom: \"10%\",\n  },\n});\n\nexport default function LivePreviewExample(props) {\n  const classes = useStyles();\n\n  useEffect(() => {\n    console.log(props);\n  }, [props.data]);\n\n  const refresh = () => {\n    props.tableRefresh();\n  };\n\n  return (\n    <Fragment>\n      <Card className=\"card-box mb-4\">\n        <div className=\"card-header pr-2\">\n          <div className=\"card-header--title\">ตารางคิว</div>\n          <div className=\"card-header--actions\">\n            <Button variant=\"outlined\" color=\"primary\" onClick={refresh}>\n              <RefreshIcon />\n            </Button>\n            {/* <Tooltip arrow title=\"Refresh\">\n              <IconButton size=\"small\" color=\"primary\" className=\"mr-3\">\n                <FontAwesomeIcon icon={[\"fas\", \"arrow-alt-to-bottom\"]} spin />\n              </IconButton>\n            </Tooltip> */}\n          </div>\n        </div>\n        <CardContent className=\"p-3\">\n          <div className=\"table-responsive\">\n            <table className=\"table table-borderless text-nowrap mb-0\">\n              <thead>\n                <tr>\n                  <th>เวลา</th>\n                  <th className=\"text-center\">ช่าง เต๋อ</th>\n                </tr>\n              </thead>\n              <tbody>\n                {props.isLoading ? (\n                  <div className={classes.isLoading}>\n                    <CircularProgress />\n                  </div>\n                ) : props.emptyQueues ? (\n                  <div className={classes.root}>\n                    <Typography variant=\"h3\" gutterBottom>\n                      ไม่มีคิว\n                    </Typography>\n                  </div>\n                ) : (\n                  props.data.map((obj, index) => {\n                    return (\n                      <tr>\n                        <td>{obj.queueTime}:00</td>\n                        <td className=\"text-center\">\n                          {obj.ownerOne === \"available\" ? (\n                            <div className=\"badge badge-success px-4 w-100\">\n                              ว่าง\n                            </div>\n                          ) : (\n                            <div className=\"badge badge-danger px-4 w-100\">\n                              จองแล้ว\n                            </div>\n                          )}\n                        </td>\n                      </tr>\n                    );\n                  })\n                )}\n\n                {/* <tr>\n                  <td>11:00</td>\n                  <td className=\"text-center\">\n                    <div className=\"badge badge-danger px-4 w-100\">จองแล้ว</div>\n                  </td>\n                </tr>\n                <tr>\n                  <td>12:00</td>\n                  <td className=\"text-center\">\n                    <div className=\"badge badge-danger px-4 w-100\">จองแล้ว</div>\n                  </td>\n                </tr>\n                <tr>\n                  <td>13:00</td>\n                  <td className=\"text-center\">\n                    <div className=\"badge badge-danger px-4 w-100\">จองแล้ว</div>\n                  </td>\n                </tr>\n                <tr>\n                  <td>14:00</td>\n                  <td className=\"text-center\">\n                    <div className=\"px-4 badge badge-success w-100\">ว่าง</div>\n                  </td>\n                </tr> */}\n              </tbody>\n            </table>\n          </div>\n        </CardContent>\n      </Card>\n    </Fragment>\n  );\n}\n","import React, { Fragment, useEffect } from \"react\";\n\nimport { PageTitle } from \"../../layout-components\";\n\nimport DashboardDefaultSection1 from \"../../example-components/DashboardDefault/DashboardDefaultSection1\";\nimport DashboardDefaultSection2 from \"../../example-components/DashboardDefault/DashboardDefaultSection2\";\nimport DashboardDefaultSection3 from \"../../example-components/DashboardDefault/DashboardDefaultSection3\";\nimport DashboardDefaultSection4 from \"../../example-components/DashboardDefault/DashboardDefaultSection4\";\n\nimport { format, set } from \"date-fns\";\n\nimport axios from \"axios\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nexport default function DashboardDefault() {\n  const [selectedDate, setSelectedDate] = React.useState(new Date());\n\n  const [queue, setQueue] = React.useState(0);\n\n  const [isDialogOpen, setIsDialogOpen] = React.useState(true);\n\n  const [isLoading, setIsLoading] = React.useState(true);\n\n  const [date, setDate] = React.useState(\n    format(new Date(), \"dd/MM/yyyy\").toString()\n  );\n\n  const [data, setData] = React.useState(null);\n\n  const [countQueue, setCountQueue] = React.useState(0);\n\n  const [emptyQueues, setEmptyQueues] = React.useState(false);\n\n  const handleDateChange = (date) => {\n    setSelectedDate(date);\n    setDate(format(date, \"dd/MM/yyyy\").toString());\n    fetchMyAPI(prosessDate(format(date, \"dd/MM/yyyy\").toString()));\n  };\n\n  const prosessDate = (dateStr) => {\n    const myArray = dateStr.split(\"/\");\n    let date = myArray[0];\n    let month = myArray[1];\n    let year = myArray[2];\n    console.log(year + \"-\" + month + \"-\" + date);\n    return year + \"-\" + month + \"-\" + date;\n  };\n\n  const handleClose = () => {\n    setIsDialogOpen(false);\n  };\n\n  const countQueues = (data) => {\n    let queue = 0;\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].ownerOne === \"available\") {\n        queue++;\n      }\n    }\n    console.log(queue);\n    return queue;\n  };\n\n  useEffect(() => {\n    fetchMyAPI(prosessDate(date));\n  }, []);\n\n  const fetchMyAPI = async (dateStr) => {\n    setIsLoading(true);\n    const url =\n      \"https://union-made-queue-management.herokuapp.com/unionMade/api/getQueuesByData?\" +\n      `date=${dateStr}`;\n\n    console.log(url);\n\n    const headers = {\n      headers: {\n        \"Access-Control-Allow-Headers\": \"*\",\n        \"Access-Control-Allow-Origin\": \"*\",\n        \"Access-Control-Allow-Methods\": \"*\",\n      },\n    };\n\n    await axios.get(url, null, headers).then((res) => {\n      setData(res.data);\n      if (res.data.length == 0) {\n        setEmptyQueues(true);\n      } else {\n        setEmptyQueues(false);\n      }\n      setCountQueue(countQueues(res.data));\n      console.log(res.data);\n    });\n    setIsLoading(false);\n  };\n\n  const tableRefresh = () => {\n    fetchMyAPI(prosessDate(date));\n  };\n\n  return (\n    <Fragment>\n      {/* <PageTitle\n        titleHeading=\"Default\"\n        titleDescription=\"This is a dashboard page example built using this template.\"\n      /> */}\n      <DashboardDefaultSection1\n        selectedDate={selectedDate}\n        handleDateChange={handleDateChange}\n        queue={queue}\n        date={date}\n        countQueue={countQueue}\n      />\n      <DashboardDefaultSection2\n        data={data}\n        isLoading={isLoading}\n        setIsLoading={setIsLoading}\n        emptyQueues={emptyQueues}\n        tableRefresh={tableRefresh}\n      />\n      {/* <DashboardDefaultSection3 /> */}\n      {/* <DashboardDefaultSection4 /> */}\n\n      <Dialog\n        fullWidth={\"md\"}\n        onClose={handleClose}\n        aria-labelledby=\"simple-dialog-title\"\n        open={isDialogOpen}\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"UnionMade Barbershop\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            ใช้สำหรับดูคิวเท่านั้น ไม่สามารถจองคิวออนไลน์ได้\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose} color=\"primary\" autoFocus>\n            ตกลง\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Fragment>\n  );\n}\n"],"sourceRoot":""}