{"version":3,"sources":["example-components/Modals/ModalsBasic/index.js","example-pages/Modals/index.js"],"names":["emails","SimpleDialog","props","onClose","selectedValue","open","handleListItemClick","value","Dialog","aria-labelledby","DialogTitle","id","List","map","email","ListItem","button","onClick","key","ListItemAvatar","Avatar","className","ListItemText","primary","autoFocus","LivePreviewExample","React","useState","setOpen","setSelectedValue","open1","setOpen1","handleClose1","open2","setOpen2","handleClose2","checked1","setChecked1","open3","setOpen3","scroll","setScroll","handleClickOpen3","scrollType","handleClose3","descriptionElementRef","useRef","useEffect","descriptionElement","current","focus","Button","variant","color","DialogContent","DialogContentText","TextField","margin","label","type","fullWidth","DialogActions","maxWidth","icon","placeholder","FormControl","FormControlLabel","control","Checkbox","checked","onChange","event","target","aria-describedby","dividers","ref","tabIndex","Array","join","Modals","titleHeading","titleDescription","sectionHeading"],"mappings":"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","file":"static/js/16.370727bf.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\n\nimport {\n  FormControlLabel,\n  Avatar,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogTitle,\n  Checkbox,\n  Button,\n  List,\n  ListItem,\n  TextField,\n  FormControl,\n  ListItemText\n} from '@material-ui/core';\n\nimport AddIcon from '@material-ui/icons/Add';\n\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport PersonIcon from '@material-ui/icons/Person';\n\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nconst emails = ['example1@example.com', 'example2@example.com'];\n\nfunction SimpleDialog(props) {\n  const { onClose, selectedValue, open } = props;\n\n  const handleClose = () => {\n    onClose(selectedValue);\n  };\n\n  const handleListItemClick = value => {\n    onClose(value);\n  };\n\n  return (\n    <Dialog\n      onClose={handleClose}\n      aria-labelledby=\"simple-dialog-title\"\n      open={open}>\n      <DialogTitle id=\"simple-dialog-title\">Set backup account</DialogTitle>\n      <List>\n        {emails.map(email => (\n          <ListItem\n            button\n            onClick={() => handleListItemClick(email)}\n            key={email}>\n            <ListItemAvatar>\n              <Avatar className=\"bg-first\">\n                <PersonIcon />\n              </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={email} />\n          </ListItem>\n        ))}\n\n        <ListItem\n          autoFocus\n          button\n          onClick={() => handleListItemClick('addAccount')}>\n          <ListItemAvatar>\n            <Avatar>\n              <AddIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary=\"Add account\" />\n        </ListItem>\n      </List>\n    </Dialog>\n  );\n}\n\nSimpleDialog.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  selectedValue: PropTypes.string.isRequired\n};\n\nexport default function LivePreviewExample() {\n  // Example 1\n\n  const [open, setOpen] = React.useState(false);\n  const [selectedValue, setSelectedValue] = React.useState(emails[1]);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = value => {\n    setOpen(false);\n    setSelectedValue(value);\n  };\n\n  // Example 2\n\n  const [open1, setOpen1] = React.useState(false);\n\n  const handleClickOpen1 = () => {\n    setOpen1(true);\n  };\n\n  const handleClose1 = () => {\n    setOpen1(false);\n  };\n\n  // Example 3\n\n  const [open2, setOpen2] = React.useState(false);\n\n  const handleClickOpen2 = () => {\n    setOpen2(true);\n  };\n\n  const handleClose2 = () => {\n    setOpen2(false);\n  };\n\n  const [checked1, setChecked1] = React.useState(true);\n\n  const handleChange1 = event => {\n    setChecked1(event.target.checked);\n  };\n\n  // Example 4\n\n  const [open3, setOpen3] = React.useState(false);\n  const [scroll, setScroll] = React.useState('paper');\n\n  const handleClickOpen3 = scrollType => () => {\n    setOpen3(true);\n    setScroll(scrollType);\n  };\n\n  const handleClose3 = () => {\n    setOpen3(false);\n  };\n\n  const descriptionElementRef = React.useRef(null);\n  React.useEffect(() => {\n    if (open3) {\n      const { current: descriptionElement } = descriptionElementRef;\n      if (descriptionElement !== null) {\n        descriptionElement.focus();\n      }\n    }\n  }, [open3]);\n\n  return (\n    <Fragment>\n      <Button\n        className=\"m-2\"\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={handleClickOpen}>\n        Open simple dialog\n      </Button>\n      <SimpleDialog\n        selectedValue={selectedValue}\n        open={open}\n        onClose={handleClose}\n      />\n\n      <Button\n        className=\"m-2\"\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={handleClickOpen1}>\n        Open form dialog\n      </Button>\n      <Dialog\n        open={open1}\n        onClose={handleClose1}\n        aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Subscribe</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            To subscribe to this website, please enter your email address here.\n            We will send updates occasionally.\n          </DialogContentText>\n          <TextField\n            autoFocus\n            margin=\"dense\"\n            id=\"name\"\n            label=\"Email Address\"\n            type=\"email\"\n            fullWidth\n          />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose1} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleClose1} color=\"primary\">\n            Subscribe\n          </Button>\n        </DialogActions>\n      </Dialog>\n\n      <Button\n        className=\"m-2\"\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={handleClickOpen2}>\n        Open login form\n      </Button>\n      <Dialog\n        open={open2}\n        maxWidth=\"lg\"\n        onClose={handleClose2}\n        aria-labelledby=\"form-dialog-title2\">\n        <DialogContent className=\"p-0\">\n          <div>\n            <div className=\"bg-secondary border-0\">\n              <div className=\"card-header d-block bg-white pt-4 pb-5\">\n                <div className=\"text-muted text-center mb-3\">\n                  <span>Sign in with</span>\n                </div>\n                <div className=\"text-center\">\n                  <Button variant=\"outlined\" className=\"mr-2 text-facebook\">\n                    <span className=\"btn-wrapper--icon\">\n                      <FontAwesomeIcon icon={['fab', 'facebook']} />\n                    </span>\n                    <span className=\"btn-wrapper--label\">Facebook</span>\n                  </Button>\n                  <Button variant=\"outlined\" className=\"ml-2 text-twitter\">\n                    <span className=\"btn-wrapper--icon\">\n                      <FontAwesomeIcon icon={['fab', 'twitter']} />\n                    </span>\n                    <span className=\"btn-wrapper--label\">Twitter</span>\n                  </Button>\n                </div>\n              </div>\n              <div className=\"card-body px-lg-5 py-lg-5\">\n                <div className=\"text-center text-muted mb-4\">\n                  <span>Or sign in with credentials</span>\n                </div>\n                <form>\n                  <div className=\"form-group mb-3\">\n                    <div className=\"input-group input-group-alternative\">\n                      <div className=\"input-group-prepend\">\n                        <div>\n                          <FontAwesomeIcon icon={['far', 'envelope']} />\n                        </div>\n                      </div>\n                      <TextField fullWidth placeholder=\"Email\" type=\"email\" />\n                    </div>\n                  </div>\n                  <FormControl>\n                    <div className=\"input-group input-group-alternative\">\n                      <div className=\"input-group-prepend\">\n                        <div>\n                          <FontAwesomeIcon icon={['fas', 'unlock-alt']} />\n                        </div>\n                      </div>\n                      <TextField\n                        fullWidth\n                        placeholder=\"Password\"\n                        type=\"password\"\n                      />\n                    </div>\n                  </FormControl>\n                  <div className=\"w-100\">\n                    <FormControlLabel\n                      control={\n                        <Checkbox\n                          checked={checked1}\n                          onChange={handleChange1}\n                          value=\"checked1\"\n                          color=\"primary\"\n                        />\n                      }\n                      label=\"Remember me\"\n                    />\n                  </div>\n                  <div className=\"text-center\">\n                    <Button\n                      color=\"primary\"\n                      variant=\"contained\"\n                      onClick={handleClose2}\n                      className=\"mt-4\">\n                      Sign in\n                    </Button>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n\n      <Button\n        className=\"m-2\"\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={handleClickOpen3('paper')}>\n        Inner scroll\n      </Button>\n      <Button\n        className=\"m-2\"\n        variant=\"outlined\"\n        color=\"primary\"\n        onClick={handleClickOpen3('body')}>\n        Body scroll\n      </Button>\n      <Dialog\n        open={open3}\n        onClose={handleClose3}\n        scroll={scroll}\n        aria-labelledby=\"scroll-dialog-title\"\n        aria-describedby=\"scroll-dialog-description\">\n        <DialogTitle id=\"scroll-dialog-title\">Subscribe</DialogTitle>\n        <DialogContent dividers={scroll === 'paper'}>\n          <DialogContentText\n            id=\"scroll-dialog-description\"\n            ref={descriptionElementRef}\n            tabIndex={-1}>\n            {[...new Array(50)]\n              .map(\n                () =>\n                  'Cras mattis consectetur purus sit amet fermentum.\\n' +\n                  'Cras justo odio, dapibus ac facilisis in, egestas eget quam.\\n' +\n                  'Morbi leo risus, porta ac consectetur ac, vestibulum at eros.' +\n                  'Praesent commodo cursus magna, vel scelerisque nisl consectetur et.'\n              )\n              .join('\\n')}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleClose3} color=\"primary\">\n            Cancel\n          </Button>\n          <Button onClick={handleClose3} color=\"primary\">\n            Subscribe\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Fragment>\n  );\n}\n","import React, { Fragment } from 'react';\n\nimport { PageTitle } from '../../layout-components';\n\nimport { ExampleWrapperSimple } from '../../layout-components';\n\nimport ModalsBasic from '../../example-components/Modals/ModalsBasic';\nexport default function Modals() {\n  return (\n    <Fragment>\n      <PageTitle\n        titleHeading=\"Modal dialogs\"\n        titleDescription=\"Wide selection of modal dialogs styles and animations available.\"\n      />\n\n      <ExampleWrapperSimple sectionHeading=\"Basic\">\n        <ModalsBasic />\n      </ExampleWrapperSimple>\n    </Fragment>\n  );\n}\n"],"sourceRoot":""}